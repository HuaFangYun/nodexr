@inject NodeTreeBrowserService browserService
@inject INodeHandler nodeHandler
@inject IToastService toastService

<div style="width: 50rem; max-width:80vw">
    <EditForm Model="model" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>Title</label>
            <InputText class="form-control" @bind-Value="model.Title" DisplayName="Title" />
        </div>
        <div class="form-group">
            <label>Description</label>
            <InputTextArea class="form-control" @bind-Value="model.Description" DisplayName="Description" />
        </div>
        <ValidationSummary />
        <button type="submit" class="btn btn-outline-light float-right">Upload</button>
    </EditForm>
</div>

@code {
    private CreateNodeTreeCommand model = new();

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = null!;

    private async Task HandleValidSubmit()
    {
        model.Expression = nodeHandler.CachedOutput.Expression;
        await browserService.PublishNodeTree(model);
        await BlazoredModal.CloseAsync();
        toastService.ShowSuccess("", "Expression uploaded successfully");
    }
}
